<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Arc.Crypto</name>
    </assembly>
    <members>
        <member name="T:Arc.Crypto.Adler32">
            <summary>
            Adler32 Hash Class.
            </summary>
        </member>
        <member name="M:Arc.Crypto.Adler32.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.Adler32"/> class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.Adler32.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.Adler32.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.Adler32.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.Adler32.Hash32(System.ReadOnlySpan{System.Byte})">
            <summary>
            Calculates CRC32 hash.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
            <returns>A 32bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.Adler32.Hash32(System.String)">
            <summary>
            Calculates a 32bit hash from the given string.
            </summary>
            <param name="str">The string containing the characters to calculates.</param>
            <returns>A 32bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.Adler32.GetHash(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.Adler32.GetHash(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.Adler32.HashInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.Adler32.HashUpdate(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.Adler32.HashUpdate(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.Adler32.HashFinal">
            <inheritdoc/>
        </member>
        <member name="T:Arc.Crypto.CRC32">
            <summary>
            CRC32 Hash Class.
            </summary>
        </member>
        <member name="M:Arc.Crypto.CRC32.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.CRC32"/> class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.CRC32.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.CRC32.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.CRC32.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.CRC32.Hash32(System.ReadOnlySpan{System.Byte})">
            <summary>
            Calculates CRC32 hash.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
            <returns>A 32bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.CRC32.Hash32(System.String)">
            <summary>
            Calculates a 32bit hash from the given string.
            </summary>
            <param name="str">The string containing the characters to calculate.</param>
            <returns>A 32bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.CRC32.GetHash(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.CRC32.GetHash(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.CRC32.HashInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.CRC32.HashUpdate(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.CRC32.HashUpdate(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.CRC32.HashFinal">
            <inheritdoc/>
        </member>
        <member name="T:Arc.Crypto.String">
            <summary>
            String extensions.
            </summary>
        </member>
        <member name="M:Arc.Crypto.String.HexToByte(System.String)">
            <summary>
            Convert the hex string to a byte array. Characters other than 0-9 a-f A-F will be ignored.
            </summary>
            <param name="hex">The hex string.</param>
            <returns>A byte array.</returns>
        </member>
        <member name="T:Arc.Crypto.FarmHash">
            <summary>
            FarmHash 64bit Class.
            </summary>
        </member>
        <member name="M:Arc.Crypto.FarmHash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.FarmHash"/> class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.FarmHash.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.FarmHash.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.FarmHash.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.FarmHash.Hash32(System.ReadOnlySpan{System.Byte})">
            <summary>
            Static function: Calculates a 32bit hash from the given data.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
            <returns>A 32bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.FarmHash.Hash32(System.String)">
            <summary>
            Static function: Calculates a 32bit hash from the given string.
            </summary>
            <param name="str">The string containing the characters to calculates.</param>
            <returns>A 32bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.FarmHash.Hash64(System.ReadOnlySpan{System.Byte})">
            <summary>
            Static function: Calculates a 64bit hash from the given data.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
            <returns>A 64bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.FarmHash.Hash64(System.String)">
            <summary>
            Static function: Calculates a 64bit hash from the given string.
            </summary>
            <param name="str">The string containing the characters to calculates.</param>
            <returns>A 64bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.FarmHash.GetHash(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.FarmHash.GetHash(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.FarmHash.HashInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.FarmHash.HashUpdate(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.FarmHash.HashUpdate(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.FarmHash.HashFinal">
            <inheritdoc/>
        </member>
        <member name="T:Arc.Crypto.IHash">
            <summary>
            Hash interface.
            </summary>
        </member>
        <member name="P:Arc.Crypto.IHash.HashName">
            <summary>
            Gets the hash name. e.g. "CRC-32", "FarmHash".
            </summary>
        </member>
        <member name="P:Arc.Crypto.IHash.HashBits">
            <summary>
            Gets the number of hash bits. e.g. 256, 512.
            </summary>
        </member>
        <member name="P:Arc.Crypto.IHash.IsCryptographic">
            <summary>
            Gets a value indicating whether the hash algorithm is cryptographic.
            </summary>
        </member>
        <member name="M:Arc.Crypto.IHash.GetHash(System.ReadOnlySpan{System.Byte})">
            <summary>
            Calculates a hash from the given data.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
            <returns>A hash.</returns>
        </member>
        <member name="M:Arc.Crypto.IHash.GetHash(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Calculates a hash from the given data.
            </summary>
            <param name="input">The byte array that contains input data.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
            <returns>A hash.</returns>
        </member>
        <member name="M:Arc.Crypto.IHash.HashInitialize">
            <summary>
            Initialize hash function state.
            1. Call HashInitialize() to initialize.
            2. Call HashUpdate() to update hash state.
            3. Call HashFinal() to get a hash.
            </summary>
        </member>
        <member name="M:Arc.Crypto.IHash.HashUpdate(System.ReadOnlySpan{System.Byte})">
            <summary>
            Update hash function state.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
        </member>
        <member name="M:Arc.Crypto.IHash.HashUpdate(System.Byte[],System.Int32,System.Int32)">
            <summary>
            Update hash function state.
            </summary>
            <param name="input">The byte array that contains input data.</param>
            <param name="inputOffset">The offset into the input byte array from which to begin using data.</param>
            <param name="inputCount">The number of bytes in the input byte array to use as data.</param>
        </member>
        <member name="M:Arc.Crypto.IHash.HashFinal">
            <summary>
            Calculates a hash from the given data (HashUpdate()).
            </summary>
            <returns>A hash.</returns>
        </member>
        <member name="T:Arc.Crypto.HashAlgorithmWrapper">
            <summary>
            Wrapper class for HashAlgorithm.
            </summary>
        </member>
        <member name="P:Arc.Crypto.HashAlgorithmWrapper.HashAlgorithm">
            <summary>
            Gets or sets the instance of HashAlgorithm.
            </summary>
        </member>
        <member name="P:Arc.Crypto.HashAlgorithmWrapper.EmptyByte">
            <summary>
            Gets empty byte[].
            </summary>
        </member>
        <member name="P:Arc.Crypto.HashAlgorithmWrapper.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.HashAlgorithmWrapper.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.HashAlgorithmWrapper.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.HashAlgorithmWrapper.GetHash(System.ReadOnlySpan{System.Byte})">
            <summary>
            Not implemented, because HashAlgorithm does not support Span. Use <see cref="M:Arc.Crypto.HashAlgorithmWrapper.GetHash(System.Byte[],System.Int32,System.Int32)"/> instead.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
            <returns>A hash.</returns>
        </member>
        <member name="M:Arc.Crypto.HashAlgorithmWrapper.GetHash(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.HashAlgorithmWrapper.HashFinal">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.HashAlgorithmWrapper.HashInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.HashAlgorithmWrapper.HashUpdate(System.ReadOnlySpan{System.Byte})">
            <summary>
            Not implemented, because HashAlgorithm does not support Span. Use <see cref="M:Arc.Crypto.HashAlgorithmWrapper.HashUpdate(System.Byte[],System.Int32,System.Int32)"/> instead.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
        </member>
        <member name="M:Arc.Crypto.HashAlgorithmWrapper.HashUpdate(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.HashAlgorithmWrapper.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Arc.Crypto.HashAlgorithmWrapper"/> class.
            </summary>
        </member>
        <member name="M:Arc.Crypto.HashAlgorithmWrapper.Dispose">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.HashAlgorithmWrapper.Dispose(System.Boolean)">
            <summary>
            free managed/native resources.
            </summary>
            <param name="disposing">true: free managed resources.</param>
        </member>
        <member name="T:Arc.Crypto.SHA1">
            <summary>
            SHA1 Hash Class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.SHA1.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA1.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA1.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.SHA1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.SHA1"/> class.
            </summary>
        </member>
        <member name="T:Arc.Crypto.SHA2_256">
            <summary>
            SHA2-256 Hash Class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.SHA2_256.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA2_256.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA2_256.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.SHA2_256.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.SHA2_256"/> class.
            </summary>
        </member>
        <member name="T:Arc.Crypto.SHA2_384">
            <summary>
            SHA2-386 Hash Class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.SHA2_384.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA2_384.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA2_384.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.SHA2_384.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.SHA2_384"/> class.
            </summary>
        </member>
        <member name="T:Arc.Crypto.SHA2_512">
            <summary>
            SHA2-512 Hash Class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.SHA2_512.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA2_512.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA2_512.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.SHA2_512.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.SHA2_512"/> class.
            </summary>
        </member>
        <member name="T:Arc.Crypto.SHA3_256">
            <summary>
            SHA3-256 Hash Class.
            </summary>
        </member>
        <member name="M:Arc.Crypto.SHA3_256.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.SHA3_256"/> class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.SHA3_256.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA3_256.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA3_256.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="T:Arc.Crypto.SHA3_384">
            <summary>
            SHA3-384 Hash Class.
            </summary>
        </member>
        <member name="M:Arc.Crypto.SHA3_384.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.SHA3_384"/> class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.SHA3_384.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA3_384.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA3_384.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="T:Arc.Crypto.SHA3_512">
            <summary>
            SHA3-512 Hash Class.
            </summary>
        </member>
        <member name="M:Arc.Crypto.SHA3_512.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.SHA3_512"/> class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.SHA3_512.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA3_512.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA3_512.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="T:Arc.Crypto.SHA3">
            <summary>
            Wrapper class for SHA3.
            </summary>
        </member>
        <member name="P:Arc.Crypto.SHA3.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA3.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA3.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.SHA3.Sponge">
            <summary>
            Gets or sets the instance of KeccakSponge.
            </summary>
        </member>
        <member name="M:Arc.Crypto.SHA3.GetHash(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.SHA3.GetHash(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.SHA3.HashFinal">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.SHA3.HashInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.SHA3.HashUpdate(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.SHA3.HashUpdate(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:Arc.Crypto.KeccakSponge">
            <summary>
            Represents a managed implementation of the Keccak sponge function and permutation.
            </summary>
        </member>
        <member name="M:Arc.Crypto.KeccakSponge.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.KeccakSponge"/> class. Protected constructor to prevent instantiation.
            </summary>
            <param name="outputBits">The number of hash size in bits.</param>
        </member>
        <member name="P:Arc.Crypto.KeccakSponge.OutputBits">
            <summary>
            Gets the number of hash size in bits.
            </summary>
        </member>
        <member name="P:Arc.Crypto.KeccakSponge.Bitrate">
            <summary>
             Gets the number of bitrate (1600 - (this.OutputBits * 2)).
            </summary>
        </member>
        <member name="M:Arc.Crypto.KeccakSponge.Initialize">
            <summary>
            Initializes the sponge state.
            </summary>
        </member>
        <member name="M:Arc.Crypto.KeccakSponge.Absorb(System.ReadOnlySpan{System.Byte})">
            <summary>
            Absorbs data into the sponge state.
            </summary>
            <param name="bytes">The read-only span to absorb.</param>
        </member>
        <member name="M:Arc.Crypto.KeccakSponge.Squeeze">
            <summary>
            Squeezes the hash out of the sponge state.
            </summary>
            <returns>A hash of the input data.</returns>
        </member>
        <member name="M:Arc.Crypto.KeccakSponge.Clear(System.Void*,System.Int32)">
            <summary>
            Fills target with zeros.
            </summary>
            <param name="target">target data.</param>
            <param name="length">target length.</param>
        </member>
        <member name="T:Arc.Crypto.XXHash64">
            <summary>
            xxHash 64bit Class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.XXHash64.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.XXHash64.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.XXHash64.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash64.Hash64(System.ReadOnlySpan{System.Byte})">
            <summary>
            Static function: Calculates a 64bit hash from the given data.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
            <returns>A 64bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.XXHash64.Hash64(System.String)">
            <summary>
            Static function: Calculates a 64bit hash from the given string.
            </summary>
            <param name="str">The string containing the characters to calculates.</param>
            <returns>A 64bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.XXHash64.GetHash(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash64.GetHash(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash64.HashInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash64.HashUpdate(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash64.HashUpdate(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash64.HashFinal">
            <inheritdoc/>
        </member>
        <member name="T:Arc.Crypto.XXHash32">
            <summary>
            xxHash 32bit Class.
            </summary>
        </member>
        <member name="P:Arc.Crypto.XXHash32.HashName">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.XXHash32.HashBits">
            <inheritdoc/>
        </member>
        <member name="P:Arc.Crypto.XXHash32.IsCryptographic">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash32.Hash32(System.ReadOnlySpan{System.Byte})">
            <summary>
            Static function: Calculates a 32bit hash from the given data.
            </summary>
            <param name="input">The read-only span that contains input data.</param>
            <returns>A 32bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.XXHash32.Hash32(System.String)">
            <summary>
            Static function: Calculates a 32bit hash from the given string.
            </summary>
            <param name="str">The string containing the characters to calculates.</param>
            <returns>A 32bit hash.</returns>
        </member>
        <member name="M:Arc.Crypto.XXHash32.GetHash(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash32.GetHash(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash32.HashInitialize">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash32.HashUpdate(System.ReadOnlySpan{System.Byte})">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash32.HashUpdate(System.Byte[],System.Int32,System.Int32)">
            <inheritdoc/>
        </member>
        <member name="M:Arc.Crypto.XXHash32.HashFinal">
            <inheritdoc/>
        </member>
        <member name="T:Arc.Crypto.XXHash">
            <summary>
            Base class for xxHash 32/64 bit. Do not use directly.
            </summary>
        </member>
        <member name="M:Arc.Crypto.XXHash.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Arc.Crypto.XXHash"/> class. Protected constructor to prevent instantiation.
            </summary>
        </member>
        <member name="M:Arc.Crypto.XXHash.XXH_read32(System.Void*)">
            <summary>
            Converts (void*) to (uint*).
            </summary>
            <param name="p">pointer void*.</param>
            <returns>pointer uint*.</returns>
        </member>
        <member name="M:Arc.Crypto.XXHash.XXH_read64(System.Void*)">
            <summary>
            Convert (void*) to (ulong*).
            </summary>
            <param name="p">pointer void*.</param>
            <returns>pointer ulong*.</returns>
        </member>
        <member name="M:Arc.Crypto.XXHash.XXH_zero(System.Void*,System.Int32)">
            <summary>
            Fills target with zeros.
            </summary>
            <param name="target">target data.</param>
            <param name="length">target length.</param>
        </member>
        <member name="M:Arc.Crypto.XXHash.XXH_copy(System.Void*,System.Void*,System.Int32)">
            <summary>
            Copy buffer.
            </summary>
            <param name="target">target buffer.</param>
            <param name="source">source buffer.</param>
            <param name="length">data length.</param>
        </member>
    </members>
</doc>
